import lookup from "country-code-lookup";
import emojiRegex from "emoji-regex";

const emojiCleanerRegex = emojiRegex();

export interface EpgSource {
  country: string;
  countryCode: string;
  url: string;
}

/**
  * Extracted from https://github.com/iptv-org/epg#usage
  ```
  Array.from(
  document.querySelector('table').querySelectorAll('tr')
)
  .map(elem => {
    return Array.from(elem.querySelectorAll('td'))
  })
  .filter(pair => pair.length)
  .map(([countryNode, epgNode]) => {
    return [countryNode.textContent, epgNode.textContent]
  })
  ```
 */
const githubInput = [
  ["ðŸ‡¦ðŸ‡± Albania", "https://iptv-org.github.io/epg/guides/albepg.com.guide.xml"],
  [
    "ðŸ‡¦ðŸ‡© Andorra",
    "https://iptv-org.github.io/epg/guides/andorradifusio.ad.guide.xml",
  ],
  ["ðŸ‡¦ðŸ‡· Argentina", "https://iptv-org.github.io/epg/guides/mi.tv.guide.xml"],
  [
    "ðŸ‡¦ðŸ‡º Australia",
    "https://iptv-org.github.io/epg/guides/ontvtonight.com.guide.xml",
  ],
  [
    "ðŸ‡§ðŸ‡¾ Belarus",
    "https://iptv-org.github.io/epg/guides/tv.yandex.ru.guide.xml",
  ],
  [
    "ðŸ‡§ðŸ‡´ Bolivia",
    "https://iptv-org.github.io/epg/guides/comteco.com.bo.guide.xml",
  ],
  ["ðŸ‡§ðŸ‡· Brazil", "https://iptv-org.github.io/epg/guides/mi.tv.guide.xml"],
  ["ðŸ‡¨ðŸ‡¦ Canada", "https://iptv-org.github.io/epg/guides/tvtv.ca.guide.xml"],
  ["ðŸ‡¨ðŸ‡± Chile", "https://iptv-org.github.io/epg/guides/mi.tv.guide.xml"],
  ["ðŸ‡¨ðŸ‡´ Colombia", "https://iptv-org.github.io/epg/guides/mi.tv.guide.xml"],
  [
    "ðŸ‡¨ðŸ‡¿ Czech Republic",
    "https://iptv-org.github.io/epg/guides/m.tv.sms.cz.guide.xml",
  ],
  ["ðŸ‡¸ðŸ‡» El Salvador", "https://iptv-org.github.io/epg/guides/mi.tv.guide.xml"],
  ["ðŸ‡«ðŸ‡® Finland", "https://iptv-org.github.io/epg/guides/telkussa.fi.guide.xml"],
  [
    "ðŸ‡«ðŸ‡· France",
    "https://iptv-org.github.io/epg/guides/programme-tv.net.guide.xml",
  ],
  ["ðŸ‡©ðŸ‡ª Germany", "https://iptv-org.github.io/epg/guides/hd-plus.de.guide.xml"],
  ["ðŸ‡¬ðŸ‡· Greece", "https://iptv-org.github.io/epg/guides/cosmote.gr.guide.xml"],
  ["ðŸ‡¬ðŸ‡¹ Guatemala", "https://iptv-org.github.io/epg/guides/mi.tv.guide.xml"],
  ["ðŸ‡­ðŸ‡³ Honduras", "https://iptv-org.github.io/epg/guides/mi.tv.guide.xml"],
  [
    "ðŸ‡®ðŸ‡¹ Italy",
    "https://iptv-org.github.io/epg/guides/guidatv.sky.it.guide.xml",
  ],
  [
    "ðŸ‡®ðŸ‡ª Ireland",
    "https://iptv-org.github.io/epg/guides/ontvtonight.com.guide.xml",
  ],
  [
    "ðŸ‡°ðŸ‡¿ Kazakhstan",
    "https://iptv-org.github.io/epg/guides/tv.yandex.ru.guide.xml",
  ],
  [
    "ðŸ‡²ðŸ‡¾ Malaysia",
    "https://iptv-org.github.io/epg/guides/astro.com.my.guide.xml",
  ],
  ["ðŸ‡²ðŸ‡½ Mexico", "https://iptv-org.github.io/epg/guides/mi.tv.guide.xml"],
  ["ðŸ‡µðŸ‡¾ Paraguay", "https://iptv-org.github.io/epg/guides/mi.tv.guide.xml"],
  ["ðŸ‡µðŸ‡ª Peru", "https://iptv-org.github.io/epg/guides/mi.tv.guide.xml"],
  [
    "ðŸ‡µðŸ‡± Poland",
    "https://iptv-org.github.io/epg/guides/programtv.onet.pl.guide.xml",
  ],
  ["ðŸ‡µðŸ‡¹ Portugal", "https://iptv-org.github.io/epg/guides/meo.pt.guide.xml"],
  [
    "ðŸ‡·ðŸ‡´ Romania",
    "https://iptv-org.github.io/epg/guides/programetv.ro.guide.xml",
  ],
  ["ðŸ‡·ðŸ‡º Russia", "https://iptv-org.github.io/epg/guides/tv.yandex.ru.guide.xml"],
  [
    "ðŸ‡ªðŸ‡¸ Spain",
    "https://iptv-org.github.io/epg/guides/programacion-tv.elpais.com.guide.xml",
  ],
  ["ðŸ‡¸ðŸ‡ª Sweden", "https://iptv-org.github.io/epg/guides/telkussa.fi.guide.xml"],
  [
    "ðŸ‡¹ðŸ‡· Turkey",
    "https://iptv-org.github.io/epg/guides/digiturk.com.tr.guide.xml",
  ],
  ["ðŸ‡ºðŸ‡¦ Ukraine", "https://iptv-org.github.io/epg/guides/tvgid.ua.guide.xml"],
  [
    "ðŸ‡¬ðŸ‡§ United Kingdom",
    "https://iptv-org.github.io/epg/guides/ontvtonight.com.guide.xml",
  ],
  [
    "ðŸ‡ºðŸ‡¸ United States",
    "https://iptv-org.github.io/epg/guides/tvtv.us.guide.xml",
  ],
  ["ðŸ‡¿ðŸ‡² Zambia", "https://iptv-org.github.io/epg/guides/znbc.co.zm.guide.xml"],
];

export const epgSources: EpgSource[] = githubInput.reduce(
  (acc, [country, url]) => {
    const countryCode = lookup
      .byCountry(country.replace(emojiCleanerRegex, "").trim())
      ?.iso2.toLowerCase();

    if (!countryCode) {
      throw new Error(`Unable to detect country code for ${country}`);
    }

    acc.push({
      country,
      url,
      countryCode,
    });

    return acc;
  },
  [] as EpgSource[]
);
